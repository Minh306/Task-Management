@model TaskManagement.Models.Account

@{
    ViewBag.Title = "ChangeProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Cập nhật thông tin cá nhân</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserName)
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.DepartmentDisplay)


        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<div class="checkbox">

                        @Html.EditorFor(model => model.Gender)
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>*@
                <div class="checkbox"></div>
                <select name="Gender">
                    <option value=null>Chưa chọn</option>
                    <option value="true" @(Model.Gender == true ? "selected" : "")>Nam</option>
                    <option value="false" @(Model.Gender == false ? "selected" : "")>Nữ</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
        document.getElementById("FullName").onkeypress = function (e) {
            var chr = String.fromCharCode(e.which);
            if ("@@!#$%^&*()'{}[]_-+=*~`,.?;></\".1234567890".indexOf(chr) >= 0)
                return false;
        };
</script>