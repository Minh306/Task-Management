@model TaskManagement.Models.TaskManage

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "TaskManages", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    /////
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <input type="hidden" id="parentId" name="parentId" value="@ViewBag.ParentId">
    <form>
        <div class="modal-content-test">
            <div class="formLogo" style="text-align: center;">
                <img src="/Assets/dist/img/VLUlogo.png" style="height: 5rem;" alt="">
            </div>
            <!-- row -->
            <div class="row">
                <div class="col-12">
                    <p style="text-align: center;font-weight: 700;font-size: 20px;">
                        Thông tin nhiệm vụ
                    </p>

                    <div class="card card-primary card-outline">
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>

            <!-- /.row -->
            <!-- row -->
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label for="inputName">Tên nhiệm vụ</label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "input" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputName">Ngày bắt đầu</label>
                        <input type="date" name="StartDate" id="StartDate" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="inputName">Ngày kết thúc</label>
                        <input type="date" name="EndDate" id="EndDate" class="form-control" value="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label for="inputName">Độ ưu tiên</label>
                        @Html.DropDownList("Priority", null, htmlAttributes: new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-1">
                    <div class="form-group">
                        <label for="inputName">Chỉ tiêu:</label>
                        @Html.EditorFor(model => model.Targets, new { htmlAttributes = new { @class = "form-control",  @id = "numb" } })
                        @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Targets, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-5">
                    <div class="form-group">
                        <label for="inputName">Đơn vị tính:</label>
                        @Html.EditorFor(model => model.UnitTargets, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.UnitTargets, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <form>
                        <label for="">Upload File:</label>
                        <div class="input-group">
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="customFile" name="FilesUpload">
                                <label class="custom-file-label" for="customFile">Choose file</label>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label for="inputDescription">Mô tả nhiệm vụ</label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", cols = 50, @rows = 4 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12" style="text-align: center;">
                    <button type="submit" class="btn btn-outline-success " id="btnCreate" value="Create">Tạo nhiệm vụ</button>
                    @Html.ActionLink("Trở lại", "Index", null, new { @class = "btn btn-outline-danger" })
                </div>
            </div>
            <!-- /.row -->
        </div>
    </form>
    ///



}
<div class="toast">
    <div class="toast-header">
        Toast Header
    </div>
    <div class="toast-body">
        Some text inside the toast body
    </div>
</div>


<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css">
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function eraseText() {
            document.getElementById("clearData").value = "";
        }
        $(document).ready(function () {
            $("#numb").on("change", function () {
                var val = $(this).val();
                if (val < 1) {
                    $(this).val(1);
                }

            })
            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });

        });
    </script>
}